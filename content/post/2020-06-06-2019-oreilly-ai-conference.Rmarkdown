---
title: 2019 Oreilly AI Conference
author: Govind G Nair
date: '2020-06-06'
slug: 2019-oreilly-ai-conference
categories:
  - Conferences
  - Machine Learning
  - AI
tags:
  - Machine Learning
  - Strategy
subtitle: ''
summary: ''
authors: []
lastmod: '2020-06-06T12:35:29-04:00'
featured: no
image:
  caption: ''
  focal_point: ''
  preview_only: no
projects: []
---

These are my notes from the O'Reilly Artificial Intelligence Conference held in San Jose in 2019.There are over a hundred hours of content from this conference so I will be continually updating this post as I consume it.


## 1) Fighting Crime with Graphs | (MIT + IBM)

Use of graphs to fight financial crime has been getting a lot of traction recently. This talk emphasized the use of Graph Convolutional Networks to create node embeddings that can be consumed by traditional machine learning models or standard neural nets.

Algorithms like node2vec and deepwalk have been used to create embeddings that capture the topology of a network, but these algorithms cannot capture the node attributes that might have rich information.

GraphSage is a Graph convolutional network algorithm that allows you to capture both the topology of a network as well as useful node attributes.Besides this is an **inductive"" algorithm meaning that it does not need to be trained on whole graphs and can be used for inference on unseen nodes and graphs.

More useful information is available (here)[http://snap.stanford.edu/graphsage/] and [here](https://blogs.oracle.com/datascience/graphwise-graph-convolutional-networks-in-pgx)


## 2) Facebook Keynote -  Going beyond supervised learning


Broad classes of Machine Learning outside the classical supervised approaches used at Facebook:

a) Weak Supervision: Use labels are already available in the data e.g. hashtags in Instagram photos. Facebook built the world's best image recognition system using the 3.5 billion images shared on Instagram using the hashtags.

A state of the art model was also created on 65 million videos to recognize 10,000 actions using the available hash tags.

b) Semi Supervised Learning: Use a small amount of labelled data to train a teacher model model and use this model to generate predictions on unlabeled data. Now pre-train a student model on this larger data set and fine tune on the original labelled data.


c) Self Supervised Learning: The best example is Language modelling where you can take a sentence of  length N and use the first N-1 words to predict the Nth word or predict a word in the middle using the surrounding words.

At facebook, self supervised learning based on Generative Adversarial Networks is used to create more robust models that can be used to detect images that have been manipulated by overlaying patterns to get around restrictions such as nudity.

This is done by training a GAN to recover the  original image from a manipulated image.

![](/post/2020-06-06-oreilly-strata-ai-confrence_files/fb self supervised GAN.PNG)

FB takes images, overlays it with random patterns. The generator tries to recreated the original while the discriminator tries to discriminate between the originals and the image generated by the generator. The model minimizes the adversarial loss which captures how well the system can fool the discriminator as well as the perceptual loss which captures how well the generator is able to recreate the original.

After training, just the generator can be used to remove patterns from images.

Another interesting application of this technique at Facebook is **machine translation without labels**.

This relies on creating automatic word dictionaries. First,you create vector representations for vocabularies in each languages and leverage the fact that the vector representations of the same word in different languages share structure to learn a *rotation matrix* to align them and produce a word by word translation.

Then  you build a language model in each language to learn the sentence structure in each language. This language model can then be used to reorder the word by word translation produced in the previous step. This gives you an initial model to translate between the two languages (L1 to L2 * L2 to L1).

![](/post/2020-06-06-oreilly-strata-ai-confrence_files/Language Model0.PNG)

Now a technique called **back translation** can be used to iteratively improve the model. In this method, you take the original sentence in Language 1 and translate this to Language 2 using the initial *L1 to L2*  model. Now you translate this back to language 1  using the *L2 to L1* model with the original sentence in Language 1 being the target. This will allow you to improve the *L2 to L1* model. By flipping the order of the translations, you can also improve the *L1 to L2* model

![](/post/2020-06-06-oreilly-strata-ai-confrence_files/Language Model1.PNG)


d) Reinforcement Learning:

Facebook uses RL to recommend notifications to users on Instagram. 

FB also has created a platform called (Habitat)[https://aihabitat.org/] 'a research platform for embodied AI agents to operate in real world-like environments and solve tasks like navigation, question-answering, et cetera'.


## 3) Data Science + Design Thinking  - A Perfect blend to achieve the best user experience  | Intuit

Design for delight by
1) Demonstrating deep customer empathy - Know customers deeply by observing them and define problems in human centric terms
2) Go broad to go narrow - Generate lots of ideas before winnowing them. Quantity first then focus on quality.
3) Perform rapid experiments with customers - Rapid prototyping and AB testing


## 4) Explaining Machine Learning Models | Fiddler Labs

Attribution problem : Attribute a prediction to input features. Solving this is the key goals of Explaining ML Models

Naive approaches to do this include:

1) Ablation: Drop each feature and note the change in prediction
2) Feature Gradient: $ x_i \times  \frac {dy}{dx_i}$ where $x_i$ is feature and $y$ is the output

**Integrated Gradients** -  This is a technique for attributing a differentiable model's prediction to the input features

A popular method for non-differentiable models is Shapley values. 


Both Integrated Gradients and Shapley Values come with some axiomatic guaranteed.The former uniquely satisfies 6 axioms while the latter uniquely satisfies 4. Side note: (This)[https://christophm.github.io/interpretable-ml-book/]
is my go to reference for interpretability techniques.


Example of an axiom is the sensitivity axiom:

> All else being equal, if changing a feature changes the output, then that feature should get an attribution. Similarly if changing a feature does not change the output, it should not get an attribution.

Integrated Gradients is the unique path integral method that satisfies: Sensitivity, Insensitivity, Linearity preservation, Implementation invariance, Completeness and Symmetry


Another problem related to interpretability that remains an open problem for many classes of black box models is 
**Influence** - i.e. Which data points in the training data influenced the model the most.



## 5) Snorkel

Snorkel is a weak supervised learning approach that came out of Stanford. More information available (here)[https://www.snorkel.org/]

The key operations in the Snorkel workflow include:

1) Labeling Functions: Heuristics to label data provided by experts
2) Transformation Functions: Data Augmentations
3) Slicing Functions: Partition the data specifying critical subsets where model performance needs to be high

For this approach to work at least 50% of the labeling functions need to be better than random.




